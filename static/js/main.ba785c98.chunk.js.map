{"version":3,"sources":["assets/CSP.png","components/HeatMap.js","components/InputSelector.js","components/SliderSelector.js","pages/Home.js","assets/191.png","components/BackButton.js","pages/Upload.js","pages/History.js","pages/About.js","App.js","index.js"],"names":["mapboxgl","workerClass","MapboxWorker","accessToken","HeatMap","classes","data","type","center","zoom","mapContainer","useRef","useEffect","map","Map","container","current","style","addControl","NavigationControl","ScaleControl","GeolocateControl","positionOptions","enableHighAccuracy","on","addSource","addLayer","id","source","maxzoom","paint","property","stops","default","minzoom","value","remove","Box","className","ref","defaultProps","memo","withStyles","height","width","InputSelector","label","onChange","array","Grid","item","xs","TextField","select","fullWidth","condition","MenuItem","SliderSelector","max","min","defaultValue","step","onChangeCommitted","InputLabel","Slider","marks","valueLabelDisplay","useStyles","makeStyles","theme","controls","position","top","spacing","left","minWidth","cardTitle","margin","sliderLabel","fontSize","marginTop","logoButton","bottom","right","borderRadius","background","CustomAccordion","root","border","boxShadow","borderBottom","display","content","expanded","Accordion","weatherOptions","Fine","lightingConditions","Dark","weatherArray","Object","keys","lightingArray","AccordionMenu","weather","handleWeatherChange","lighting","handleLightingChange","speedLimit","handleSpeedLimitChange","handleIlluminationChangeCommited","useState","setExpanded","image","setImage","history","useHistory","axios","get","process","then","length","handlePanelChange","panel","event","isExpanded","AccordionSummary","expandIcon","aria-controls","Typography","variant","px","direction","Divider","maxWidth","accept","input","multiple","file","target","files","formData","FormData","append","post","headers","res","push","filename","catch","err","alert","console","log","htmlFor","Button","component","color","Link","to","padding","overflow","alt","src","List","ListItem","button","ListItemIcon","ListItemText","primary","LogoButton","React","anchorEl","setAnchorEl","open","Boolean","undefined","aria-describedby","onClick","currentTarget","CSP","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Container","Home","state","setState","generateDataUrl","Paper","elevation","e","prevState","backButton","BackButton","severityBreakpoints","options","setWeather","setLighting","setSpeedLimit","severity","setSeverity","query","URLSearchParams","useLocation","search","brightness","speed","sm","example","align","pt","TableContainer","Table","table","aria-label","TableHead","TableRow","TableCell","TableBody","key","cardButton","cardImage","maxHeight","History","list","setList","About","App","CssBaseline","path","Upload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba785c98.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CSP.59a53c23.png\";","import React, { useEffect, useRef, memo } from 'react';\nimport { Box, withStyles } from '@material-ui/core';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\n// eslint-disable-next-line\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken =\n    'pk.eyJ1IjoibmVlZHNzb3lzYXVjZSIsImEiOiJja2RyYzBrNjUxZW01MnJta3V1YXN0eXAyIn0.opUlsiw-E89nF-NHh54QkA';\n\nconst styles = {\n    mapContainer: {\n        height: '100%',\n        width: '100%',\n    },\n};\n\nconst HeatMap = ({ classes, data, type, center, zoom }) => {\n    const mapContainer = useRef();\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center,\n            zoom,\n        });\n\n        map.addControl(new mapboxgl.NavigationControl());\n        map.addControl(new mapboxgl.ScaleControl());\n        map.addControl(\n            new mapboxgl.GeolocateControl({\n                positionOptions: {\n                    enableHighAccuracy: true,\n                },\n            }),\n        );\n\n        map.on('load', () => {\n            map.addSource('heatmap-data', {\n                type,\n                data,\n            });\n\n            map.addLayer(\n                {\n                    id: 'trees-heat',\n                    type: 'heatmap',\n                    source: 'heatmap-data',\n                    maxzoom: 15,\n                    paint: {\n                        'heatmap-weight': {\n                            property: 'severity',\n                            type: 'exponential',\n                            stops: [\n                                [0, 0],\n                                [0.1, 0.2],\n                                [0.2, 0.4],\n                                [0.4, 0.8],\n                                [0.8, 1.6],\n                                [1, 3.2],\n                            ],\n                        },\n                        'heatmap-intensity': {\n                            stops: [\n                                [11, 1],\n                                [15, 1],\n                            ],\n                        },\n                        'heatmap-radius': {\n                            stops: [\n                                [11, 40],\n                                [15, 100],\n                                [30, 250],\n                            ],\n                        },\n                        'heatmap-opacity': {\n                            default: 1,\n                            stops: [\n                                [14, 0.8],\n                                [20, 0],\n                            ],\n                        },\n                    },\n                },\n                'waterway-label',\n            );\n\n            map.addLayer(\n                {\n                    id: 'trees-point',\n                    type: 'circle',\n                    source: 'heatmap-data',\n                    minzoom: 14,\n                    paint: {\n                        'circle-radius': {\n                            property: 'severity',\n                            type: 'exponential',\n                            stops: [\n                                [{ zoom: 15, value: 1 }, 5],\n                                [{ zoom: 15, value: 62 }, 10],\n                                [{ zoom: 22, value: 1 }, 20],\n                                [{ zoom: 22, value: 62 }, 50],\n                            ],\n                        },\n                        'circle-color': {\n                            property: 'severity',\n                            type: 'exponential',\n                            stops: [\n                                [0, 'rgba(236,222,239,0)'],\n                                [10, 'rgb(236,222,239)'],\n                                [20, 'rgb(208,209,230)'],\n                                [30, 'rgb(166,189,219)'],\n                                [40, 'rgb(103,169,207)'],\n                                [50, 'rgb(28,144,153)'],\n                                [60, 'rgb(1,108,89)'],\n                            ],\n                        },\n                        'circle-stroke-color': 'white',\n                        'circle-stroke-width': 1,\n                        'circle-opacity': {\n                            stops: [\n                                [14, 0],\n                                [15, 1],\n                            ],\n                        },\n                    },\n                },\n                'waterway-label',\n            );\n        });\n\n        return () => map.remove();\n    }, [center, data, type, zoom]);\n\n    return <Box className={classes.mapContainer} ref={mapContainer} />;\n};\n\nHeatMap.defaultProps = {\n    type: 'geojson',\n    center: [174.80559255221153, -36.9288161777414], // [longitude, latitude],\n    zoom: 10,\n};\n\nexport default memo(withStyles(styles)(HeatMap));\n","import React from 'react';\nimport { Grid, TextField, MenuItem } from '@material-ui/core';\n\nconst InputSelector = ({ label, id, value, onChange, array }) => (\n    <Grid item xs>\n        <TextField\n            id={id}\n            select\n            label={label}\n            value={value}\n            onChange={onChange}\n            fullWidth\n        >\n            {array.map((condition) => (\n                <MenuItem value={condition} key={condition}>\n                    {condition}\n                </MenuItem>\n            ))}\n        </TextField>\n    </Grid>\n);\n\nexport default InputSelector;\n","import React from 'react';\nimport { Grid, InputLabel, Slider } from '@material-ui/core';\n\nconst SliderSelector = ({\n    className,\n    label,\n    max,\n    min,\n    defaultValue,\n    step,\n    value,\n    onChange,\n    onChangeCommitted,\n}) => (\n    <Grid item xs>\n        <InputLabel className={className}>{label}</InputLabel>\n        <Slider\n            defaultValue={defaultValue}\n            step={step}\n            min={min}\n            max={max}\n            marks={[\n                {\n                    value: min,\n                    label: min,\n                },\n                {\n                    value: max,\n                    label: max,\n                },\n            ]}\n            valueLabelDisplay=\"auto\"\n            value={value}\n            onChange={onChange}\n            onChangeCommitted={onChangeCommitted}\n        />\n    </Grid>\n);\n\nexport default SliderSelector;\n","import React, { useState, memo, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Paper,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Popover,\n} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CSP from '../assets/CSP.png';\nimport HeatMap from '../components/HeatMap';\nimport InputSelector from '../components/InputSelector';\nimport SliderSelector from '../components/SliderSelector';\n\nconst useStyles = makeStyles((theme) => ({\n    map: {\n        height: '100vh',\n        width: '100vw',\n    },\n    controls: {\n        position: 'fixed',\n        top: theme.spacing(2),\n        left: theme.spacing(2),\n        minWidth: '200px',\n    },\n    cardTitle: {\n        margin: theme.spacing(1),\n    },\n    sliderLabel: {\n        fontSize: 13,\n        marginTop: theme.spacing(1),\n    },\n    logoButton: {\n        position: 'absolute',\n        width: 100,\n        height: 100,\n        bottom: theme.spacing(4),\n        right: theme.spacing(2),\n        borderRadius: 50,\n        background: 'white',\n    },\n}));\n\nconst CustomAccordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n    },\n    expanded: {},\n})(Accordion);\n\nexport const weatherOptions = {\n    Fine: 'F',\n    'Light rain': 'LR',\n    'Heavy rain': 'HR',\n};\n\nconst lightingConditions = {\n    'Bright sun': '1.0',\n    Dark: '0.0',\n    'In-between': '0.5',\n};\n\nconst weatherArray = Object.keys(weatherOptions);\nconst lightingArray = Object.keys(lightingConditions);\n\nconst Home = () => {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        weather: weatherArray[0],\n        lighting: lightingArray[0],\n        speedLimit: 50,\n        // eslint-disable-next-line\n        data:\n            'https://raw.githubusercontent.com/SoySauceNZ/geojson/main/F_0.0_100.geojson',\n    });\n\n    const generateDataUrl = () => {\n        const baseUrl = process.env.REACT_APP_GEOJSON_BASE_URL;\n        const weather = weatherOptions[state.weather];\n        const lighting = lightingConditions[state.lighting];\n        const filename = `${weather}_${lighting}_${state.speedLimit}`;\n        return `${baseUrl}/${filename}.geojson`;\n    };\n\n    const handleWeatherChange = (e) => {\n        setState((prevState) => ({\n            ...prevState,\n            weather: e.target.value,\n            data: generateDataUrl(),\n        }));\n    };\n\n    const handleLightingChange = (e) => {\n        setState((prevState) => ({\n            ...prevState,\n            lighting: e.target.value,\n            data: generateDataUrl(),\n        }));\n    };\n\n    const handleSpeedLimitChange = (e, value) => {\n        setState((prevState) => ({\n            ...prevState,\n            speedLimit: value,\n        }));\n    };\n\n    const handleIlluminationChangeCommited = (e, value) => {\n        setState((prevState) => ({\n            ...prevState,\n            speedLimit: value,\n            data: generateDataUrl(),\n        }));\n    };\n\n    return (\n        <>\n            <Box className={classes.map}>\n                <HeatMap data={state.data} />\n            </Box>\n            <Container maxWidth=\"sm\">\n                <Paper elevation={12} className={classes.controls}>\n                    <AccordionMenu\n                        classes={classes}\n                        weather={state.weather}\n                        handleWeatherChange={handleWeatherChange}\n                        lighting={state.lighting}\n                        handleLightingChange={handleLightingChange}\n                        speedLimit={state.speedLimit}\n                        handleSpeedLimitChange={handleSpeedLimitChange}\n                        handleIlluminationChangeCommited={\n                            handleIlluminationChangeCommited\n                        }\n                    />\n                </Paper>\n                <LogoButton className={classes.logoButton} />\n            </Container>\n        </>\n    );\n};\n\nconst AccordionMenu = memo(\n    ({\n        classes,\n        weather,\n        handleWeatherChange,\n        lighting,\n        handleLightingChange,\n        speedLimit,\n        handleSpeedLimitChange,\n        handleIlluminationChangeCommited,\n    }) => {\n        const [expanded, setExpanded] = useState('panel1');\n        const [image, setImage] = useState(null);\n        const history = useHistory();\n\n        useEffect(() => {\n            axios.get(`${process.env.REACT_APP_API}/list`).then(({ data }) => {\n                setImage(data[data.length - 1]);\n            });\n        }, []);\n\n        const handlePanelChange = (panel) => (event, isExpanded) => {\n            setExpanded(isExpanded ? panel : false);\n        };\n\n        const onFileChange = (event) => {\n            const file = event.target.files[0];\n            const formData = new FormData();\n            formData.append('file', file);\n            const config = {\n                headers: { 'Content-Type': 'multipart/form-data' },\n            };\n\n            axios\n                .post(`${process.env.REACT_APP_API}/upload`, formData, config)\n                .then((res) => {\n                    history.push(`/upload?file=${res.data.filename}`);\n                })\n                .catch((err) => {\n                    alert(`Upload Error: ${err}`);\n                    console.log(err);\n                });\n        };\n\n        return (\n            <>\n                <CustomAccordion\n                    expanded={expanded === 'panel1'}\n                    onChange={handlePanelChange('panel1')}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.cardTitle} variant=\"h6\">\n                            Crash Severity\n                        </Typography>\n                    </AccordionSummary>\n\n                    <Box px={4}>\n                        <Grid container spacing={2} direction=\"column\">\n                            <InputSelector\n                                label=\"Weather\"\n                                id=\"weather-selector\"\n                                value={weather}\n                                onChange={handleWeatherChange}\n                                array={weatherArray}\n                            />\n                            <InputSelector\n                                label=\"Lighting\"\n                                id=\"lighting-selector\"\n                                value={lighting}\n                                onChange={handleLightingChange}\n                                array={lightingArray}\n                            />\n                            <SliderSelector\n                                className={classes.sliderLabel}\n                                label=\"Speed (km/h)\"\n                                id=\"speed-selector\"\n                                max={100}\n                                min={50}\n                                defaultValue={50}\n                                step={50}\n                                value={speedLimit}\n                                onChange={handleSpeedLimitChange}\n                                onChangeCommitted={\n                                    handleIlluminationChangeCommited\n                                }\n                            />\n                            <Divider style={{ margin: 10 }} />\n                            <Grid style={{ maxWidth: 300 }}>\n                                <Typography>\n                                    Upload your own 500x500 image to predict\n                                    crash severity\n                                </Typography>\n                                <br />\n                                <form>\n                                    <input\n                                        accept=\"image/*\"\n                                        className={classes.input}\n                                        style={{ display: 'none' }}\n                                        id=\"raised-button-file\"\n                                        multiple\n                                        type=\"file\"\n                                        onChange={onFileChange}\n                                    />\n                                    <label htmlFor=\"raised-button-file\">\n                                        <center>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"span\"\n                                                color=\"primary\"\n                                            >\n                                                Upload\n                                            </Button>\n                                        </center>\n                                    </label>\n                                </form>\n                                <br />\n\n                                {image !== null ? (\n                                    <center>\n                                        <Typography>\n                                            Last Uploaded Image to Server\n                                        </Typography>\n\n                                        <Button\n                                            component={Link}\n                                            to={`/upload?file=${image}`}\n                                            style={{\n                                                borderRadius: 10,\n                                                padding: 0,\n                                                overflow: 'hidden',\n                                                width: '60%',\n                                            }}\n                                        >\n                                            <img\n                                                alt={image}\n                                                src={`${process.env.REACT_APP_API}/images/${image}`}\n                                                style={{\n                                                    width: '100%',\n                                                }}\n                                            />\n                                        </Button>\n\n                                        <Typography>\n                                            More tab below for more History\n                                        </Typography>\n                                    </center>\n                                ) : null}\n                            </Grid>\n                            <br />\n                        </Grid>\n                    </Box>\n                </CustomAccordion>\n                <CustomAccordion\n                    expanded={expanded === 'panel2'}\n                    onChange={handlePanelChange('panel2')}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel2a-content\"\n                        id=\"panel2a-header\"\n                    >\n                        <Typography className={classes.cardTitle} variant=\"h6\">\n                            More\n                        </Typography>\n                    </AccordionSummary>\n                    <List>\n                        <ListItem\n                            button\n                            component={Link}\n                            to=\"/history\"\n                            key=\"Upload History\"\n                        >\n                            <ListItemIcon>\n                                <PermMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Upload History\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            component={Link}\n                            to=\"/about\"\n                            key=\"About us\"\n                        >\n                            <ListItemIcon>\n                                <InfoIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"About SoySauceNZ\" />\n                        </ListItem>\n                    </List>\n                </CustomAccordion>\n            </>\n        );\n    },\n);\n\nconst LogoButton = memo(({ className }) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <>\n            <Button\n                aria-describedby={id}\n                variant=\"contained\"\n                className={className}\n                onClick={handleClick}\n            >\n                <img alt=\"CSP\" src={CSP} style={{ height: 60, width: 60 }} />\n            </Button>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n            >\n                <Container style={{ margin: 10 }}>\n                    <Typography>\n                        v0.0.1 alpha.{' '}\n                        <Link target=\"_blank\" to=\"//github.com/SoySauceNZ\">\n                            SoySauseNZ\n                        </Link>{' '}\n                        2021\n                    </Typography>\n                    <Divider />\n                    <Typography>\n                        Based on Maxar satelite images and{' '}\n                        <Link>CAS Open Data</Link>\n                    </Typography>\n                    <Typography>\n                        <Link\n                            target=\"_blank\"\n                            to=\"//www.mbie.govt.nz/science-and-technology/science-and-innovation/international-opportunities/new-zealand-r-d/innovative-partnerships/takiwaehere-the-geospatial-hackathon/\"\n                        >\n                            TakiWaehere – NZ Geospatial Hackathon\n                        </Link>\n                    </Typography>\n                </Container>\n            </Popover>\n        </>\n    );\n});\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/191.7f070291.png\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport CSP from '../assets/CSP.png';\n\nconst useStyles = makeStyles((theme) => ({\n    backButton: {\n        position: 'fixed',\n        width: 100,\n        height: 100,\n        bottom: theme.spacing(4),\n        right: theme.spacing(2),\n        borderRadius: 50,\n        background: 'white',\n    },\n}));\n\nconst BackButton = () => {\n    const classes = useStyles();\n    return (\n        <Button\n            component={Link}\n            to=\"/\"\n            variant=\"contained\"\n            className={classes.backButton}\n        >\n            <img alt=\"CSP\" src={CSP} style={{ height: 60, width: 60 }} />\n        </Button>\n    );\n};\n\nexport default BackButton;\n","import { Grid, Typography, withStyles, Box } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport example from '../assets/191.png';\nimport BackButton from '../components/BackButton';\nimport InputSelector from '../components/InputSelector';\nimport SliderSelector from '../components/SliderSelector';\nimport { weatherOptions } from './Home';\n\nconst styles = (theme) => ({\n    cardTitle: {\n        marginTop: theme.spacing(1),\n    },\n    sliderLabel: {\n        fontSize: 12,\n        marginTop: theme.spacing(2),\n    },\n    options: {\n        padding: theme.spacing(4),\n    },\n});\n\nconst severityBreakpoints = {\n    'Non-Injury Crash': '0.0',\n    'Minor Crash': '0.33',\n    'Serious Crash': '0.66',\n    'Fatal Crash': '1.0',\n};\n\nconst weatherArray = Object.keys(weatherOptions);\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst Upload = ({ classes }) => {\n    const [weather, setWeather] = useState(weatherArray[0]);\n    const [lighting, setLighting] = useState(0.5);\n    const [speedLimit, setSpeedLimit] = useState(50);\n    const [severity, setSeverity] = useState(null);\n\n    const query = useQuery();\n\n    const handleWeatherChange = (e) => {\n        setWeather(e.target.value);\n    };\n\n    const handleLightingChange = (e, value) => {\n        setLighting(value);\n    };\n\n    const handleSpeedLimitChange = (e, value) => {\n        setSpeedLimit(value);\n    };\n\n    useEffect(() => {\n        axios\n            .post(`${process.env.REACT_APP_API}/predict`, {\n                filename: query.get('file'),\n                weather: weatherOptions[weather],\n                brightness: lighting,\n                speed: speedLimit,\n            })\n            .then((res) => {\n                setSeverity(res.data.severity);\n            })\n            .catch((err) => {\n                alert(`Prediction: ${err}`);\n                console.log(err);\n            });\n    }, [weather, lighting, speedLimit, query]);\n\n    const handleIlluminationChangeCommited = (e, value) => {\n        // TODO: Update the heatmap\n    };\n\n    return (\n        <Grid container>\n            <Grid item xs={12} sm={6}>\n                <img\n                    alt=\"uploaded\"\n                    src={example}\n                    style={{\n                        background: 'black',\n                        width: '100%',\n                        height: 'auto',\n                        borderRadius: 10,\n                        margin: 10,\n                    }}\n                />\n            </Grid>\n            <Grid className={classes.options} item xs={12} sm={6}>\n                <Typography className={classes.cardTitle} variant=\"h5\">\n                    Crash Severity\n                </Typography>\n                <br />\n                <InputSelector\n                    label=\"Weather\"\n                    id=\"weather-selector\"\n                    value={weather}\n                    onChange={handleWeatherChange}\n                    array={weatherArray}\n                />\n                <br />\n                <SliderSelector\n                    className={classes.sliderLabel}\n                    label=\"Lighting\"\n                    id=\"lighting-selector\"\n                    max={1.0}\n                    min={0.0}\n                    defaultValue={0.5}\n                    step={0.1}\n                    value={lighting}\n                    onChange={handleLightingChange}\n                    onChangeCommitted={handleIlluminationChangeCommited}\n                />\n                <br />\n                <SliderSelector\n                    className={classes.sliderLabel}\n                    label=\"Speed (km/h)\"\n                    id=\"speed-selector\"\n                    max={100}\n                    min={0}\n                    defaultValue={50}\n                    step={10}\n                    value={speedLimit}\n                    onChange={handleSpeedLimitChange}\n                    onChangeCommitted={handleIlluminationChangeCommited}\n                />\n                <Typography\n                    className={classes.cardTitle}\n                    variant=\"h6\"\n                    align=\"center\"\n                >\n                    Severity: {severity}\n                </Typography>\n                <Box pt={2}>\n                    <TableContainer component={Paper}>\n                        <Table\n                            className={classes.table}\n                            aria-label=\"simple table\"\n                        >\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Severity</TableCell>\n                                    <TableCell>Prediction</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {Object.keys(severityBreakpoints).map((key) => (\n                                    <TableRow key={key}>\n                                        <TableCell>{key}</TableCell>\n                                        <TableCell>\n                                            {severityBreakpoints[key]}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </Grid>\n            <BackButton />\n        </Grid>\n    );\n};\n\nexport default withStyles(styles)(Upload);\n","import React, { useEffect, useState } from 'react';\nimport {\n    Container,\n    Grid,\n    Button,\n    Typography,\n    Divider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BackButton from '../components/BackButton';\n\nconst useStyles = makeStyles((theme) => ({\n    cardButton: {\n        borderRadius: 10,\n        padding: 0,\n        overflow: 'hidden',\n    },\n    cardImage: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n}));\n\nconst History = () => {\n    const [list, setList] = useState([]);\n    const classes = useStyles();\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API}/list`).then((res) => {\n            setList(res.data);\n        });\n    }, []);\n\n    return (\n        <Container>\n            <br />\n            <Typography variant=\"h3\">Upload History</Typography>\n            <br />\n            <Divider />\n            <br />\n            <Grid container spacing={3}>\n                {list.map((image) => (\n                    <Grid button key={image} item xs={6} sm={3}>\n                        <Button\n                            component={Link}\n                            to={`/upload?file=${image}`}\n                            className={classes.cardButton}\n                        >\n                            <img\n                                alt={image}\n                                src={`${process.env.REACT_APP_API}/images/${image}`}\n                                className={classes.cardImage}\n                            />\n                        </Button>\n                    </Grid>\n                ))}\n            </Grid>\n            <BackButton />\n        </Container>\n    );\n};\n\nexport default History;\n","import React from 'react';\nimport { Container, Typography, Divider } from '@material-ui/core';\nimport BackButton from '../components/BackButton';\nimport CSP from '../assets/CSP.png';\n\nconst About = () => (\n    <Container>\n        <br />\n        <Typography variant=\"h3\">About Us</Typography>\n        <center>\n            <img src={CSP} alt=\"CSP\" width=\"200\" />\n            <Typography variant=\"h4\">Crash Severity Prediction</Typography>\n            <Typography variant=\"h5\">By team SoySauceNZ</Typography>\n            <Typography>\n                Neville, Cheng-Zhen, Feras, Young, Dylan and Sunny\n            </Typography>\n        </center>\n        <br />\n        <Divider />\n        <br />\n        <Typography>\n            When new road infrastructure is built, it is important to measure\n            the level of safety of the users on the road. In the case of our\n            app, we have chosen to predict the severity of a crash at a\n            particular location. To aid us in prediction we have chosen to use a\n            machine learning model that is fed in weather, visibility and speed\n            limit data from the Crash Analysis System managed by the NZTA. Using\n            this model we will be able to predict whether a road in a new area\n            will be safe in the event of a crash.\n        </Typography>\n        <BackButton />\n    </Container>\n);\n\nexport default About;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Upload from './pages/Upload';\nimport History from './pages/History';\nimport About from './pages/About';\n\nexport default function App() {\n    return (\n        <>\n            <CssBaseline />\n            <Router>\n                <Switch>\n                    <Route path=\"/upload\" component={Upload} />\n                    <Route path=\"/history\" component={History} />\n                    <Route path=\"/about\" component={About} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}